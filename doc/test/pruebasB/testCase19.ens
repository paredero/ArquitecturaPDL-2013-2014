; INICIO PROGRAMA PRINCIPAL pasQal 
RES 11
MOVE #65535, .SP
MOVE .SP , .IY
SUB  .SP , #15
MOVE .A , .SP
MOVE .IY , /0
NOP
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [ASIG X, 0, null]
MOVE #0, #-6[.IY]
; Traducir Quadruple - [ASIG Y, 1, null]
MOVE #1, #-7[.IY]
; Traducir Quadruple - [CMP Y, 1, null]
CMP #-7[.IY], #1
; Salto si no cero a etiqueta __L0
BNZ /L0
WRSTR /cadena1
; Escribimos un salto de linea
WRSTR /cadena0
; Etiqueta de salto __L0
L0 :
NOP
; Traducir Quadruple - [CMP 1, 1, null]
CMP #1, #1
; Salto si cero a etiqueta __L1
BZ /L1
; Traducir Quadruple - [CMP 1, 1, null]
CMP #1, #1
; Salto si cero a etiqueta __L1
BZ /L1
; Traducir Quadruple - [ASIG _T_0, 0, null]
MOVE #0, #-9[.IY]
BR /L2
; Etiqueta de salto __L1
L1 :
; Traducir Quadruple - [ASIG _T_0, 1, null]
MOVE #1, #-9[.IY]
; Etiqueta de salto __L2
L2 :
; Traducir Quadruple - [ASIG X, _T_0, null]
MOVE #-9[.IY], #-6[.IY]
; Traducir Quadruple - [CMP X, 1, null]
CMP #-6[.IY], #1
; Salto si no cero a etiqueta __L3
BNZ /L3
WRSTR /cadena2
; Escribimos un salto de linea
WRSTR /cadena0
; Etiqueta de salto __L3
L3 :
NOP
; Traducir Quadruple - [CMP 4, 5, null]
CMP #4, #5
; Salto si negativo __L4
BN /L4
; Traducir Quadruple - [ASIG _T_1, 0, null]
MOVE #0, #-10[.IY]
BR /L5
; Etiqueta de salto __L4
L4 :
; Traducir Quadruple - [ASIG _T_1, 1, null]
MOVE #1, #-10[.IY]
; Etiqueta de salto __L5
L5 :
; Traducir Quadruple - [ASIG X, _T_1, null]
MOVE #-10[.IY], #-6[.IY]
; Traducir Quadruple - [CMP X, 1, null]
CMP #-6[.IY], #1
; Salto si no cero a etiqueta __L6
BNZ /L6
WRSTR /cadena3
; Escribimos un salto de linea
WRSTR /cadena0
; Etiqueta de salto __L6
L6 :
NOP
; Traducir Quadruple - [CMP 6, 6, null]
CMP #6, #6
; Salto si cero a etiqueta __L7
BZ /L7
; Traducir Quadruple - [ASIG _T_2, 0, null]
MOVE #0, #-11[.IY]
BR /L8
; Etiqueta de salto __L7
L7 :
; Traducir Quadruple - [ASIG _T_2, 1, null]
MOVE #1, #-11[.IY]
; Etiqueta de salto __L8
L8 :
; Traducir Quadruple - [ASIG X, _T_2, null]
MOVE #-11[.IY], #-6[.IY]
; Traducir Quadruple - [CMP X, 1, null]
CMP #-6[.IY], #1
; Salto si no cero a etiqueta __L9
BNZ /L9
WRSTR /cadena4
; Escribimos un salto de linea
WRSTR /cadena0
; Etiqueta de salto __L9
L9 :
NOP
; Traducir Quadruple - [CMP 0, 0, null]
CMP #0, #0
; Salto si cero a etiqueta __L10
BZ /L10
; Traducir Quadruple - [ASIG _T_3, 0, null]
MOVE #0, #-12[.IY]
BR /L11
; Etiqueta de salto __L10
L10 :
; Traducir Quadruple - [ASIG _T_3, 1, null]
MOVE #1, #-12[.IY]
; Etiqueta de salto __L11
L11 :
; Traducir Quadruple - [ASIG X, _T_3, null]
MOVE #-12[.IY], #-6[.IY]
; Traducir Quadruple - [CMP X, 1, null]
CMP #-6[.IY], #1
; Salto si no cero a etiqueta __L12
BNZ /L12
WRSTR /cadena5
; Escribimos un salto de linea
WRSTR /cadena0
; Etiqueta de salto __L12
L12 :
NOP
; Traducir Quadruple - [CMP 4, 5, null]
CMP #4, #5
; Salto si cero a etiqueta __L13
BZ /L13
; Traducir Quadruple - [ASIG _T_4, 0, null]
MOVE #0, #-13[.IY]
BR /L14
; Etiqueta de salto __L13
L13 :
; Traducir Quadruple - [ASIG _T_4, 1, null]
MOVE #1, #-13[.IY]
; Etiqueta de salto __L14
L14 :
; Traducir Quadruple - [CMP 1, _T_4, null]
CMP #1, #-13[.IY]
; Salto si cero a etiqueta __L15
BZ /L15
; Traducir Quadruple - [CMP 1, 1, null]
CMP #1, #1
; Salto si cero a etiqueta __L15
BZ /L15
; Traducir Quadruple - [ASIG _T_5, 0, null]
MOVE #0, #-14[.IY]
BR /L16
; Etiqueta de salto __L15
L15 :
; Traducir Quadruple - [ASIG _T_5, 1, null]
MOVE #1, #-14[.IY]
; Etiqueta de salto __L16
L16 :
; Traducir Quadruple - [ASIG X, _T_5, null]
MOVE #-14[.IY], #-6[.IY]
; Traducir Quadruple - [CMP X, 1, null]
CMP #-6[.IY], #1
; Salto si no cero a etiqueta __L17
BNZ /L17
WRSTR /cadena6
; Escribimos un salto de linea
WRSTR /cadena0
; Etiqueta de salto __L17
L17 :
NOP
; Escribimos un salto de linea
WRSTR /cadena0
HALT 

; Inicio Cadenas de Texto

cadena0:  DATA "\n"
cadena1:  DATA "VARIABLE TRUE."
cadena2:  DATA "VARIABLE TRUE OR TRUE."
cadena3:  DATA "VARIABLE 5 > 4."
cadena4:  DATA "VARIABLE 6 = 6."
cadena5:  DATA "VARIABLE FALSE = FALSE."
cadena6:  DATA "VARIABLE (4 = 5) OR TRUE."
