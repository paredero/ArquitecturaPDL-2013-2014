; INICIO PROGRAMA PRINCIPAL pasQal 
RES 11
MOVE #65535, .SP
MOVE .SP , .IY
SUB  .SP , #29
MOVE .A , .SP
MOVE .IY , /0
NOP
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [ASIG A, 3, null]
MOVE #3, #-5[.IY]
; Traducir Quadruple - [DIR_MEM _T_0, A, null]
SUB .IY , #5
MOVE .A ,  #-9[.IY]
; Traducir Quadruple - [ASIG P, _T_0, null]
MOVE #-9[.IY], #-7[.IY]
WRSTR /cadena1
SUB #-7[.IY] , #0 
MOVE [.A] , #-10[.IY]
WRINT #-10[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena2
WRINT #-7[.IY]
; Traducir Quadruple - [ASIG Q, P, null]
MOVE #-7[.IY], #-8[.IY]
SUB #-5[.IY], #1
MOVE .A, #-11[.IY]
; Traducir Quadruple - [ASIG A, _T_2, null]
MOVE #-11[.IY], #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena3
SUB #-8[.IY] , #0 
MOVE [.A] , #-12[.IY]
WRINT #-12[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena4
WRINT #-8[.IY]
SUB #-7[.IY], #1
MOVE .A, #-13[.IY]
; Traducir Quadruple - [ASIG B, _T_4, null]
MOVE #-13[.IY], #-6[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena5
WRINT #-6[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
SUB #-7[.IY] , #0 
MOVE [.A] , #-14[.IY]
; Traducir Quadruple - [ASIG A, _T_5, null]
MOVE #-14[.IY], #-5[.IY]
WRSTR /cadena6
WRINT #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [ASIG_PUNTERO P, 9, null]
SUB #-7[.IY], #0 
MOVE #9, [.A]
SUB #-7[.IY] , #0 
MOVE [.A] , #-15[.IY]
SUB #-15[.IY], #1
MOVE .A, #-16[.IY]
; Traducir Quadruple - [ASIG A, _T_7, null]
MOVE #-16[.IY], #-5[.IY]
WRSTR /cadena7
WRINT #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
SUB #-5[.IY], #2
MOVE .A, #-17[.IY]
; Traducir Quadruple - [ASIG_PUNTERO P, _T_8, null]
SUB #-7[.IY], #0 
MOVE #-17[.IY], [.A]
WRSTR /cadena8
SUB #-7[.IY] , #0 
MOVE [.A] , #-18[.IY]
WRINT #-18[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [DIR_MEM _T_10, A, null]
SUB .IY , #5
MOVE .A ,  #-19[.IY]
; Traducir Quadruple - [DIR_MEM _T_11, A, null]
SUB .IY , #5
MOVE .A ,  #-20[.IY]
SUB #-19[.IY], #-20[.IY]
MOVE .A, #-21[.IY]
; Traducir Quadruple - [ASIG A, _T_12, null]
MOVE #-21[.IY], #-5[.IY]
WRSTR /cadena9
WRINT #0
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [DIR_MEM _T_13, A, null]
SUB .IY , #5
MOVE .A ,  #-22[.IY]
SUB #-7[.IY], #-22[.IY]
MOVE .A, #-23[.IY]
; Traducir Quadruple - [ASIG A, _T_14, null]
MOVE #-23[.IY], #-5[.IY]
WRSTR /cadena10
WRINT #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
SUB #-8[.IY], #8
MOVE .A, #-24[.IY]
; Traducir Quadruple - [ASIG A, _T_15, null]
MOVE #-24[.IY], #-5[.IY]
WRSTR /cadena11
WRINT #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
SUB #-7[.IY], #-8[.IY]
MOVE .A, #-25[.IY]
; Traducir Quadruple - [ASIG A, _T_16, null]
MOVE #-25[.IY], #-5[.IY]
WRSTR /cadena12
WRINT #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [DIR_MEM _T_17, A, null]
SUB .IY , #5
MOVE .A ,  #-26[.IY]
; Traducir Quadruple - [ASIG P, _T_17, null]
MOVE #-26[.IY], #-7[.IY]
; Traducir Quadruple - [DIR_MEM _T_18, A, null]
SUB .IY , #5
MOVE .A ,  #-27[.IY]
SUB #-7[.IY], #-27[.IY]
MOVE .A, #-28[.IY]
; Traducir Quadruple - [ASIG A, _T_19, null]
MOVE #-28[.IY], #-5[.IY]
WRSTR /cadena13
WRINT #-5[.IY]
HALT 

; Inicio Cadenas de Texto

cadena0:  DATA "\n"
cadena1:  DATA "IMPRIME EL CONTENIDO DE LA VARIABLE APUNTADA POR P (3): "
cadena2:  DATA "IMPRIME LA DIRECCION DE MEMORIA DE A(-6): "
cadena3:  DATA "IMPRIME EL VALOR ACTUAL DE A (2): "
cadena4:  DATA "IMPRIME LA DIRECCION DE MEMORIA DE A (-6): "
cadena5:  DATA "IMPRIME LA DIRECCION DE MEMORIA DE A MENOS 1 (-7): "
cadena6:  DATA "IMPRIME EL CONTENIDO DE LA DIRECCON DE P (2): "
cadena7:  DATA "IMPRIME EL VALOR ACTUAL DE A (8): "
cadena8:  DATA "IMPRIME EL CONTENIDO DE LA DIRECCION APUNTADA POR P (6): "
cadena9:  DATA "IMPRIME EL VALOR ACTUAL DE A (0): "
cadena10:  DATA "IMPRIME EL VALOR ACTUAL DE A (0): "
cadena11:  DATA "IMPRIME EL VALOR ACTUAL DE A (-14): "
cadena12:  DATA "IMPRIME EL VALOR ACTUAL DE A (0): "
cadena13:  DATA "IMPRIME EL VALOR ACTUAL DE A (0): "
