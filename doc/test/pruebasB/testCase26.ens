; INICIO PROGRAMA PRINCIPAL pasQal 
RES 21
MOVE #65535, .SP
MOVE .SP , .IY
SUB  .SP , #23
MOVE .A , .SP
MOVE .IY , /0
;-- Definicion FUNCION/PROCEDIMIENTO 
BR /FIN_L0
L0 :

NOP
WRSTR /cadena1
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [ASIG A1, 90, null]
MOVE #90, #-6[.IY]
MOVE #100 , #0[.IY]
MOVE #L1 , .PC

L1 : 
; Retorno Argumentos REFERENCIA 
MOVE #-4[.IY] , .R5 
MOVE .R5 , .PC 
REF_L0: 
; Retorno Subprograma 
MOVE #0[.IY] , .R9
MOVE #-1[.IY] , .R7
MOVE #-2[.IY] , /0
MOVE .IY , .SP
MOVE .IX , .IY
MOVE #-3[.IY], .IX
MOVE .R7 , .PC
FIN_L0 : 

; Escribimos un salto de linea
WRSTR /cadena0
; INICIO ARGUMENTOS FIN
; Cargado argumento Quadruple - [ARGUMENTO 1, 5, null]
; Llamada Funcion Quadruple - [CALL F, 0, _T_0]
MOVE .SP , .IX
MOVE #1 , #-5[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #8
MOVE .A , .SP
MOVE #RET_L2 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L2 , #-4[.IY]
BR /L0
REF_L2:
BR /REF_L0
RET_L2: 
MOVE .R9 , #-16[.IY]

SUB #-16[.IY], #200
MOVE .A, #-17[.IY]
; Traducir Quadruple - [ASIG A, _T_1, null]
MOVE #-17[.IY], #-5[.IY]
WRSTR /cadena2
WRINT #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
; INICIO ARGUMENTOS FIN
; Cargado argumento Quadruple - [ARGUMENTO 1, 5, null]
; Llamada Funcion Quadruple - [CALL F, 0, _T_2]
MOVE .SP , .IX
MOVE #1 , #-5[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #8
MOVE .A , .SP
MOVE #RET_L3 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L3 , #-4[.IY]
BR /L0
REF_L3:
BR /REF_L0
RET_L3: 
MOVE .R9 , #-18[.IY]

; INICIO ARGUMENTOS FIN
; Cargado argumento Quadruple - [ARGUMENTO 1, 5, null]
; Llamada Funcion Quadruple - [CALL F, 0, _T_3]
MOVE .SP , .IX
MOVE #1 , #-5[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #8
MOVE .A , .SP
MOVE #RET_L4 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L4 , #-4[.IY]
BR /L0
REF_L4:
BR /REF_L0
RET_L4: 
MOVE .R9 , #-19[.IY]

SUB #-18[.IY], #-19[.IY]
MOVE .A, #-20[.IY]
; INICIO ARGUMENTOS FIN
; Cargado argumento Quadruple - [ARGUMENTO 1, 5, null]
; Llamada Funcion Quadruple - [CALL F, 0, _T_5]
MOVE .SP , .IX
MOVE #1 , #-5[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #8
MOVE .A , .SP
MOVE #RET_L5 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L5 , #-4[.IY]
BR /L0
REF_L5:
BR /REF_L0
RET_L5: 
MOVE .R9 , #-21[.IY]

SUB #-20[.IY], #-21[.IY]
MOVE .A, #-22[.IY]
; Traducir Quadruple - [ASIG A, _T_6, null]
MOVE #-22[.IY], #-5[.IY]
WRSTR /cadena3
WRINT #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
HALT 

; Inicio Cadenas de Texto

cadena0:  DATA "\n"
cadena1:  DATA "PASO POR LA FUNCION."
cadena2:  DATA "LLAMADA F(1)-200 (-100): "
cadena3:  DATA "LLAMADA A F()-F()-F() (-100): "
