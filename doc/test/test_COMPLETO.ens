; INICIO PROGRAMA PRINCIPAL pasQal 
RES 51
MOVE #65535, .SP
MOVE .SP , .IY
SUB  .SP , #63
MOVE .A , .SP
MOVE .IY , /0
;-- Definicion FUNCION/PROCEDIMIENTO 
BR /FIN_L0
L0 :

NOP
SUB #0, #-6[.IY]
MOVE .A, #-7[.IY]
SUB #-5[.IY], #-7[.IY]
MOVE .A, #-8[.IY]
MOVE #-8[.IY] , #0[.IY]
MOVE #L1 , .PC

L1 : 
; Retorno Argumentos REFERENCIA 
MOVE #-4[.IY] , .R5 
MOVE .R5 , .PC 
REF_L0: 
; Retorno Subprograma 
MOVE #0[.IY] , .R9
MOVE #-1[.IY] , .R7
MOVE #-2[.IY] , /0
MOVE .IY , .SP
MOVE .IX , .IY
MOVE #-3[.IY], .IX
MOVE .R7 , .PC
FIN_L0 : 

;-- Definicion FUNCION/PROCEDIMIENTO 
BR /FIN_L2
L2 :

NOP
; Traducir Quadruple - [ASIG ACUMULADO, 0, null]
MOVE #0, #-7[.IY]
; Traducir Quadruple - [ASIG I, 1, null]
MOVE #1, #-8[.IY]
; Traducir Quadruple - [ASIG _T_1, B, null]
MOVE #-6[.IY], #-10[.IY]
; Etiqueta de salto __L5
L5 :
; Traducir Quadruple - [CMP _T_1, I, null]
CMP #-10[.IY], #-8[.IY]
; Salto si negativo __L6
BN /L6
; INICIO ARGUMENTOS FIN
; Cargado argumento Quadruple - [ARGUMENTO ACUMULADO, 5, null]
; Cargado argumento Quadruple - [ARGUMENTO A, 6, null]
; Llamada Funcion Quadruple - [CALL SUMA, 0, _T_0]
MOVE .SP , .IX
MOVE #-7[.IY] , #-5[.IX]
MOVE #-5[.IY] , #-6[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #9
MOVE .A , .SP
MOVE #RET_L4 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L4 , #-4[.IY]
BR /L0
REF_L4:
BR /REF_L0
RET_L4: 
MOVE .R9 , #-9[.IY]

; Traducir Quadruple - [ASIG ACUMULADO, _T_0, null]
MOVE #-9[.IY], #-7[.IY]
INC #-8[.IY]
BR /L5
; Etiqueta de salto __L6
L6 :
MOVE #-7[.IY] , #0[.IY]
MOVE #L3 , .PC

L3 : 
; Retorno Argumentos REFERENCIA 
MOVE #-4[.IY] , .R5 
MOVE .R5 , .PC 
REF_L2: 
; Retorno Subprograma 
MOVE #0[.IY] , .R9
MOVE #-1[.IY] , .R7
MOVE #-2[.IY] , /0
MOVE .IY , .SP
MOVE .IX , .IY
MOVE #-3[.IY], .IX
MOVE .R7 , .PC
FIN_L2 : 

;-- Definicion FUNCION/PROCEDIMIENTO 
BR /FIN_L7
L7 :

NOP
; Traducir Quadruple - [ASIG ACUMULADO, 1, null]
MOVE #1, #-7[.IY]
; Traducir Quadruple - [ASIG I, 1, null]
MOVE #1, #-8[.IY]
; Traducir Quadruple - [ASIG _T_1, B, null]
MOVE #-6[.IY], #-10[.IY]
; Etiqueta de salto __L10
L10 :
; Traducir Quadruple - [CMP _T_1, I, null]
CMP #-10[.IY], #-8[.IY]
; Salto si negativo __L11
BN /L11
; INICIO ARGUMENTOS FIN
; Cargado argumento Quadruple - [ARGUMENTO ACUMULADO, 5, null]
; Cargado argumento Quadruple - [ARGUMENTO A, 6, null]
; Llamada Funcion Quadruple - [CALL MULTIPLICA, 0, _T_0]
MOVE .SP , .IX
MOVE #-7[.IY] , #-5[.IX]
MOVE #-5[.IY] , #-6[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #11
MOVE .A , .SP
MOVE #RET_L9 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L9 , #-4[.IY]
BR /L2
REF_L9:
BR /REF_L2
RET_L9: 
MOVE .R9 , #-9[.IY]

; Traducir Quadruple - [ASIG ACUMULADO, _T_0, null]
MOVE #-9[.IY], #-7[.IY]
INC #-8[.IY]
BR /L10
; Etiqueta de salto __L11
L11 :
MOVE #-7[.IY] , #0[.IY]
MOVE #L8 , .PC

L8 : 
; Retorno Argumentos REFERENCIA 
MOVE #-4[.IY] , .R5 
MOVE .R5 , .PC 
REF_L7: 
; Retorno Subprograma 
MOVE #0[.IY] , .R9
MOVE #-1[.IY] , .R7
MOVE #-2[.IY] , /0
MOVE .IY , .SP
MOVE .IX , .IY
MOVE #-3[.IY], .IX
MOVE .R7 , .PC
FIN_L7 : 

;-- Definicion FUNCION/PROCEDIMIENTO 
BR /FIN_L12
L12 :

NOP
; Traducir Quadruple - [CMP N, 1, null]
CMP #-5[.IY], #1
; Salto si cero a etiqueta __L14
BZ /L14
; Traducir Quadruple - [ASIG _T_0, 0, null]
MOVE #0, #-6[.IY]
BR /L15
; Etiqueta de salto __L14
L14 :
; Traducir Quadruple - [ASIG _T_0, 1, null]
MOVE #1, #-6[.IY]
; Etiqueta de salto __L15
L15 :
; Traducir Quadruple - [CMP _T_0, 1, null]
CMP #-6[.IY], #1
; Salto si no cero a etiqueta __L19
BNZ /L19
MOVE #1 , #0[.IY]
MOVE #L13 , .PC

BR /L18
; Etiqueta de salto __L19
L19 :
; INICIO ARGUMENTOS FIN
; INICIO ARGUMENTOS FIN
SUB #-5[.IY], #1
MOVE .A, #-7[.IY]
; Cargado argumento Quadruple - [ARGUMENTO _T_1, 5, null]
; Llamada Funcion Quadruple - [CALL FACTORIAL, 0, _T_2]
MOVE .SP , .IX
MOVE #-7[.IY] , #-5[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #10
MOVE .A , .SP
MOVE #RET_L16 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L16 , #-4[.IY]
BR /L12
REF_L16:
BR /REF_L12
RET_L16: 
MOVE .R9 , #-8[.IY]

; Cargado argumento Quadruple - [ARGUMENTO _T_2, 5, null]
; Cargado argumento Quadruple - [ARGUMENTO N, 6, null]
; Llamada Funcion Quadruple - [CALL MULTIPLICA, 0, _T_3]
MOVE .SP , .IX
MOVE #-8[.IY] , #-5[.IX]
MOVE #-5[.IY] , #-6[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #11
MOVE .A , .SP
MOVE #RET_L17 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L17 , #-4[.IY]
BR /L2
REF_L17:
BR /REF_L2
RET_L17: 
MOVE .R9 , #-9[.IY]

MOVE #-9[.IY] , #0[.IY]
MOVE #L13 , .PC

; Etiqueta de salto __L18
L18 :
NOP
L13 : 
; Retorno Argumentos REFERENCIA 
MOVE #-4[.IY] , .R5 
MOVE .R5 , .PC 
REF_L12: 
; Retorno Subprograma 
MOVE #0[.IY] , .R9
MOVE #-1[.IY] , .R7
MOVE #-2[.IY] , /0
MOVE .IY , .SP
MOVE .IX , .IY
MOVE #-3[.IY], .IX
MOVE .R7 , .PC
FIN_L12 : 

; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena1
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena2
; Escribimos un salto de linea
WRSTR /cadena0
WRINT #12345
; Escribimos un salto de linea
WRSTR /cadena0
WRINT #1111
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [ASIG VARINT01, 12311, null]
MOVE #12311, #-9[.IY]
; Traducir Quadruple - [ASIG_REGISTRO VARFECHA, DIA, 11]
SUB .IY , #14
MOVE #11 , [.A]
; Traducir Quadruple - [ASIG VARINT02, 12322, null]
MOVE #12322, #-10[.IY]
; Traducir Quadruple - [DIR_MEM _T_0, VARINT02, null]
SUB .IY , #10
MOVE .A ,  #-29[.IY]
; Traducir Quadruple - [ASIG VARPOINTER01, _T_0, null]
MOVE #-29[.IY], #-20[.IY]
; Traducir Quadruple - [ASIG VARPOINTER02, VARPOINTER01, null]
MOVE #-20[.IY], #-23[.IY]
; Traducir Quadruple - [ASIG_REGISTRO VARFECHA, ANNO, 2010]
SUB .IY , #16
MOVE #2010 , [.A]
; Traducir Quadruple - [ASIG_REGISTRO VARFECHA, MES, 4]
SUB .IY , #15
MOVE #4 , [.A]
; Traducir Quadruple - [ASIG VARINT03, 12333, null]
MOVE #12333, #-11[.IY]
; Traducir Quadruple - [ASIG_REGISTRO VARREG01, ITEMI1, 1]
SUB .IY , #5
MOVE #1 , [.A]
; Traducir Quadruple - [ASIG_REGISTRO VARREG01, ITEMI2, 2]
SUB .IY , #6
MOVE #2 , [.A]
; Traducir Quadruple - [ACCESO_REGISTRO _T_1, VARREG01, ITEMI2]
SUB .IY , #6
MOVE [.A] , #-30[.IY]
; Traducir Quadruple - [ACCESO_REGISTRO _T_2, VARFECHA, DIA]
SUB .IY , #14
MOVE [.A] , #-31[.IY]
SUB #0, #-31[.IY]
MOVE .A, #-32[.IY]
SUB #-30[.IY], #-32[.IY]
MOVE .A, #-33[.IY]
; Traducir Quadruple - [ACCESO_REGISTRO _T_5, VARREG01, ITEMI1]
SUB .IY , #5
MOVE [.A] , #-34[.IY]
SUB #-33[.IY], #-34[.IY]
MOVE .A, #-35[.IY]
; Traducir Quadruple - [ACCESO_REGISTRO _T_7, VARREG01, ITEMI1]
SUB .IY , #5
MOVE [.A] , #-36[.IY]
SUB #-35[.IY], #-36[.IY]
MOVE .A, #-37[.IY]
; Traducir Quadruple - [ASIG_REGISTRO VARFECHA, HORA, _T_8]
SUB .IY , #17
MOVE #-37[.IY] , [.A]
; Traducir Quadruple - [ACCESO_REGISTRO _T_9, VARREG01, ITEMI2]
SUB .IY , #6
MOVE [.A] , #-38[.IY]
; Traducir Quadruple - [ACCESO_REGISTRO _T_10, VARREG01, ITEMI1]
SUB .IY , #5
MOVE [.A] , #-39[.IY]
; Traducir Quadruple - [CMP _T_10, _T_9, null]
CMP #-39[.IY], #-38[.IY]
; Salto si negativo __L20
BN /L20
; Traducir Quadruple - [ASIG _T_11, 0, null]
MOVE #0, #-40[.IY]
BR /L21
; Etiqueta de salto __L20
L20 :
; Traducir Quadruple - [ASIG _T_11, 1, null]
MOVE #1, #-40[.IY]
; Etiqueta de salto __L21
L21 :
; Traducir Quadruple - [ASIG_REGISTRO VARREG01, ITEMB1, _T_11]
SUB .IY , #7
MOVE #-40[.IY] , [.A]
; Traducir Quadruple - [ASIG_REGISTRO VARREG01, ITEMB2, 1]
SUB .IY , #8
MOVE #1 , [.A]
; Traducir Quadruple - [ASIG VARINT04, 12344, null]
MOVE #12344, #-12[.IY]
; Traducir Quadruple - [ASIG VARINT04, 12344, null]
MOVE #12344, #-12[.IY]
; Traducir Quadruple - [ASIG VARINT05, 12355, null]
MOVE #12355, #-13[.IY]
; Traducir Quadruple - [ACCESO_REGISTRO _T_12, VARFECHA, HORA]
SUB .IY , #17
MOVE [.A] , #-41[.IY]
SUB #-41[.IY], #3
MOVE .A, #-42[.IY]
; Traducir Quadruple - [ACCESO_REGISTRO _T_14, VARREG01, ITEMI1]
SUB .IY , #5
MOVE [.A] , #-43[.IY]
SUB #-42[.IY], #-43[.IY]
MOVE .A, #-44[.IY]
; Traducir Quadruple - [ASIG_REGISTRO VARFECHA, MINUTO, _T_15]
SUB .IY , #18
MOVE #-44[.IY] , [.A]
; Traducir Quadruple - [ASIG_REGISTRO VARFECHA, SEGUNDO, 1]
SUB .IY , #19
MOVE #1 , [.A]
WRINT #-9[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena3
; Traducir Quadruple - [ACCESO_REGISTRO _T_16, VARREG01, ITEMI2]
SUB .IY , #6
MOVE [.A] , #-45[.IY]
WRINT #-45[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena4
; Traducir Quadruple - [ACCESO_REGISTRO _T_17, VARREG01, ITEMI1]
SUB .IY , #5
MOVE [.A] , #-46[.IY]
WRINT #-46[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena5
WRINT #-10[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena6
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena7
; INICIO ARGUMENTOS FIN
; Cargado argumento Quadruple - [ARGUMENTO 3, 5, null]
; Cargado argumento Quadruple - [ARGUMENTO 7, 6, null]
; Llamada Funcion Quadruple - [CALL SUMA, 0, _T_18]
MOVE .SP , .IX
MOVE #3 , #-5[.IX]
MOVE #7 , #-6[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #9
MOVE .A , .SP
MOVE #RET_L22 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L22 , #-4[.IY]
BR /L0
REF_L22:
BR /REF_L0
RET_L22: 
MOVE .R9 , #-47[.IY]

WRINT #-47[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena8
; INICIO ARGUMENTOS FIN
; INICIO ARGUMENTOS FIN
; INICIO ARGUMENTOS FIN
; INICIO ARGUMENTOS FIN
; Cargado argumento Quadruple - [ARGUMENTO 2, 5, null]
; Cargado argumento Quadruple - [ARGUMENTO 5, 6, null]
; Llamada Funcion Quadruple - [CALL POTENCIA, 0, _T_19]
MOVE .SP , .IX
MOVE #2 , #-5[.IX]
MOVE #5 , #-6[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #11
MOVE .A , .SP
MOVE #RET_L23 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L23 , #-4[.IY]
BR /L7
REF_L23:
BR /REF_L7
RET_L23: 
MOVE .R9 , #-48[.IY]

; Cargado argumento Quadruple - [ARGUMENTO _T_19, 5, null]
; INICIO ARGUMENTOS FIN
; Cargado argumento Quadruple - [ARGUMENTO 16, 5, null]
; Cargado argumento Quadruple - [ARGUMENTO 16, 6, null]
; Llamada Funcion Quadruple - [CALL SUMA, 0, _T_20]
MOVE .SP , .IX
MOVE #16 , #-5[.IX]
MOVE #16 , #-6[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #9
MOVE .A , .SP
MOVE #RET_L24 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L24 , #-4[.IY]
BR /L0
REF_L24:
BR /REF_L0
RET_L24: 
MOVE .R9 , #-49[.IY]

; Cargado argumento Quadruple - [ARGUMENTO _T_20, 6, null]
; Llamada Funcion Quadruple - [CALL SUMA, 0, _T_21]
MOVE .SP , .IX
MOVE #-48[.IY] , #-5[.IX]
MOVE #-49[.IY] , #-6[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #9
MOVE .A , .SP
MOVE #RET_L25 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L25 , #-4[.IY]
BR /L0
REF_L25:
BR /REF_L0
RET_L25: 
MOVE .R9 , #-50[.IY]

; Cargado argumento Quadruple - [ARGUMENTO _T_21, 5, null]
; Cargado argumento Quadruple - [ARGUMENTO 2, 6, null]
; Llamada Funcion Quadruple - [CALL MULTIPLICA, 0, _T_22]
MOVE .SP , .IX
MOVE #-50[.IY] , #-5[.IX]
MOVE #2 , #-6[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #11
MOVE .A , .SP
MOVE #RET_L26 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L26 , #-4[.IY]
BR /L2
REF_L26:
BR /REF_L2
RET_L26: 
MOVE .R9 , #-51[.IY]

SUB #-51[.IY], #125
MOVE .A, #-52[.IY]
; Cargado argumento Quadruple - [ARGUMENTO _T_23, 5, null]
; Cargado argumento Quadruple - [ARGUMENTO 7, 6, null]
; Llamada Funcion Quadruple - [CALL SUMA, 0, _T_24]
MOVE .SP , .IX
MOVE #-52[.IY] , #-5[.IX]
MOVE #7 , #-6[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #9
MOVE .A , .SP
MOVE #RET_L27 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L27 , #-4[.IY]
BR /L0
REF_L27:
BR /REF_L0
RET_L27: 
MOVE .R9 , #-53[.IY]

SUB #-53[.IY], #4
MOVE .A, #-54[.IY]
WRINT #-54[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [ASIG_PUNTERO VARPOINTER01, 5, null]
SUB #-20[.IY], #0 
MOVE #5, [.A]
WRSTR /cadena9
; INICIO ARGUMENTOS FIN
; Cargado argumento Quadruple - [ARGUMENTO 2, 5, null]
SUB #-20[.IY] , #0 
MOVE [.A] , #-55[.IY]
; Cargado argumento Quadruple - [ARGUMENTO _T_26, 6, null]
; Llamada Funcion Quadruple - [CALL MULTIPLICA, 0, _T_27]
MOVE .SP , .IX
MOVE #2 , #-5[.IX]
MOVE #-55[.IY] , #-6[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #11
MOVE .A , .SP
MOVE #RET_L28 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L28 , #-4[.IY]
BR /L2
REF_L28:
BR /REF_L2
RET_L28: 
MOVE .R9 , #-56[.IY]

SUB #-56[.IY], #5
MOVE .A, #-57[.IY]
WRINT #-57[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [ASIG_REGISTRO VARFECHA, MES, 3]
SUB .IY , #15
MOVE #3 , [.A]
WRSTR /cadena10
; INICIO ARGUMENTOS FIN
; Traducir Quadruple - [ACCESO_REGISTRO _T_29, VARFECHA, MES]
SUB .IY , #15
MOVE [.A] , #-58[.IY]
; Cargado argumento Quadruple - [ARGUMENTO _T_29, 5, null]
; Traducir Quadruple - [ACCESO_REGISTRO _T_30, VARFECHA, MES]
SUB .IY , #15
MOVE [.A] , #-59[.IY]
SUB #-59[.IY], #1
MOVE .A, #-60[.IY]
; Cargado argumento Quadruple - [ARGUMENTO _T_31, 6, null]
; Llamada Funcion Quadruple - [CALL POTENCIA, 0, _T_32]
MOVE .SP , .IX
MOVE #-58[.IY] , #-5[.IX]
MOVE #-60[.IY] , #-6[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #11
MOVE .A , .SP
MOVE #RET_L29 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L29 , #-4[.IY]
BR /L7
REF_L29:
BR /REF_L7
RET_L29: 
MOVE .R9 , #-61[.IY]

SUB #-61[.IY], #0
MOVE .A, #-62[.IY]
WRINT #-62[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
HALT 

; Inicio Cadenas de Texto

cadena0:  DATA "\n"
cadena1:  DATA "*** PRUEBA SALIDA"
cadena2:  DATA "HOLA MUNDO"
cadena3:  DATA "ESTO TIENE QUE VALER     2: "
cadena4:  DATA "ESTO TIENE QUE VALER     1: "
cadena5:  DATA "ESTO TIENE QUE VALER 12322: "
cadena6:  DATA "*** LLAMADAS A FUNCIONES"
cadena7:  DATA "ESTO TIENE QUE DAR 10: "
cadena8:  DATA "ESTO TIENE QUE DAR 06: "
cadena9:  DATA "ESTO TIENE QUE DAR 05: "
cadena10:  DATA "ESTO TIENE QUE DAR 09: "
