; INICIO PROGRAMA PRINCIPAL pasQal 
RES 11
MOVE #65535, .SP
MOVE .SP , .IY
SUB  .SP , #44
MOVE .A , .SP
MOVE .IY , /0
NOP
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [ASIG A, 3, null]
MOVE #3, #-5[.IY]
; Traducir Quadruple - [DIR_MEM _T_0, A, null]
SUB .IY , #5
MOVE .A ,  #-11[.IY]
; Traducir Quadruple - [ASIG P, _T_0, null]
MOVE #-11[.IY], #-7[.IY]
; Traducir Quadruple - [DIR_MEM _T_1, A, null]
SUB .IY , #5
MOVE .A ,  #-12[.IY]
; Traducir Quadruple - [ASIG_REGISTRO R, PUNTERO, _T_1]
SUB .IY , #10
MOVE #-12[.IY] , [.A]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena1
SUB #-7[.IY] , #0 
MOVE [.A] , #-13[.IY]
WRINT #-13[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena2
; Traducir Quadruple - [ACCESO_REGISTRO_PUNTERO _T_3, R, PUNTERO]
SUB .IY , #10
MOVE [.A] , .R1 
SUB .R1 , #0 
MOVE [.A] , #-14[.IY]
WRINT #-14[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena3
WRINT #-7[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena4
; Traducir Quadruple - [ACCESO_REGISTRO _T_4, R, PUNTERO]
SUB .IY , #10
MOVE [.A] , #-15[.IY]
WRINT #-15[.IY]
; Traducir Quadruple - [ASIG Q, P, null]
MOVE #-7[.IY], #-8[.IY]
SUB #-5[.IY], #1
MOVE .A, #-16[.IY]
; Traducir Quadruple - [ASIG A, _T_5, null]
MOVE #-16[.IY], #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena5
SUB #-8[.IY] , #0 
MOVE [.A] , #-17[.IY]
WRINT #-17[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena6
WRINT #-8[.IY]
SUB #-7[.IY], #1
MOVE .A, #-18[.IY]
; Traducir Quadruple - [ASIG B, _T_7, null]
MOVE #-18[.IY], #-6[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena7
WRINT #-6[.IY]
SUB #-7[.IY] , #0 
MOVE [.A] , #-19[.IY]
; Traducir Quadruple - [ASIG A, _T_8, null]
MOVE #-19[.IY], #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena8
WRINT #-5[.IY]
; Traducir Quadruple - [ACCESO_REGISTRO_PUNTERO _T_9, R, PUNTERO]
SUB .IY , #10
MOVE [.A] , .R1 
SUB .R1 , #0 
MOVE [.A] , #-20[.IY]
; Traducir Quadruple - [ASIG A, _T_9, null]
MOVE #-20[.IY], #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena9
WRINT #-5[.IY]
; Traducir Quadruple - [ASIG_PUNTERO P, 9, null]
SUB #-7[.IY], #0 
MOVE #9, [.A]
SUB #-7[.IY] , #0 
MOVE [.A] , #-21[.IY]
SUB #-21[.IY], #1
MOVE .A, #-22[.IY]
; Traducir Quadruple - [ASIG A, _T_11, null]
MOVE #-22[.IY], #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena10
WRINT #-5[.IY]
; Traducir Quadruple - [ASIG_REGISTRO_PUNTERO R, PUNTERO, 99]
SUB .IY , #10
MOVE [.A] , .R2 
SUB .R2 , #0
MOVE #99 , [.A]
; Traducir Quadruple - [ACCESO_REGISTRO_PUNTERO _T_12, R, PUNTERO]
SUB .IY , #10
MOVE [.A] , .R1 
SUB .R1 , #0 
MOVE [.A] , #-23[.IY]
SUB #-23[.IY], #1
MOVE .A, #-24[.IY]
; Traducir Quadruple - [ASIG A, _T_13, null]
MOVE #-24[.IY], #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena11
WRINT #-5[.IY]
; Traducir Quadruple - [ASIG A, 8, null]
MOVE #8, #-5[.IY]
SUB #-5[.IY], #2
MOVE .A, #-25[.IY]
; Traducir Quadruple - [ASIG_PUNTERO P, _T_14, null]
SUB #-7[.IY], #0 
MOVE #-25[.IY], [.A]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena12
SUB #-7[.IY] , #0 
MOVE [.A] , #-26[.IY]
WRINT #-26[.IY]
ADD #-5[.IY], #2
MOVE .A, #-27[.IY]
; Traducir Quadruple - [ASIG_REGISTRO_PUNTERO R, PUNTERO, _T_16]
SUB .IY , #10
MOVE [.A] , .R2 
SUB .R2 , #0
MOVE #-27[.IY] , [.A]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena13
; Traducir Quadruple - [ACCESO_REGISTRO_PUNTERO _T_17, R, PUNTERO]
SUB .IY , #10
MOVE [.A] , .R1 
SUB .R1 , #0 
MOVE [.A] , #-28[.IY]
WRINT #-28[.IY]
; Traducir Quadruple - [DIR_MEM _T_18, A, null]
SUB .IY , #5
MOVE .A ,  #-29[.IY]
; Traducir Quadruple - [DIR_MEM _T_19, A, null]
SUB .IY , #5
MOVE .A ,  #-30[.IY]
SUB #-29[.IY], #-30[.IY]
MOVE .A, #-31[.IY]
; Traducir Quadruple - [ASIG A, _T_20, null]
MOVE #-31[.IY], #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena14
WRINT #-5[.IY]
; Traducir Quadruple - [DIR_MEM_REGISTRO _T_21, R, ENTERO]
SUB .IY , #9
MOVE .A , #-32[.IY]
; Traducir Quadruple - [DIR_MEM_REGISTRO _T_22, R, ENTERO]
SUB .IY , #9
MOVE .A , #-33[.IY]
SUB #-32[.IY], #-33[.IY]
MOVE .A, #-34[.IY]
; Traducir Quadruple - [ASIG_REGISTRO R, ENTERO, _T_23]
SUB .IY , #9
MOVE #-34[.IY] , [.A]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena15
; Traducir Quadruple - [ACCESO_REGISTRO _T_24, R, ENTERO]
SUB .IY , #9
MOVE [.A] , #-35[.IY]
WRINT #-35[.IY]
; Traducir Quadruple - [ASIG_REGISTRO R, ENTERO, 1999]
SUB .IY , #9
MOVE #1999 , [.A]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena16
; Traducir Quadruple - [DIR_MEM_REGISTRO _T_25, R, ENTERO]
SUB .IY , #9
MOVE .A , #-36[.IY]
WRINT #-36[.IY]
; Traducir Quadruple - [DIR_MEM _T_26, A, null]
SUB .IY , #5
MOVE .A ,  #-37[.IY]
SUB #-7[.IY], #-37[.IY]
MOVE .A, #-38[.IY]
; Traducir Quadruple - [ASIG A, _T_27, null]
MOVE #-38[.IY], #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena17
WRINT #-5[.IY]
SUB #-8[.IY], #8
MOVE .A, #-39[.IY]
; Traducir Quadruple - [ASIG A, _T_28, null]
MOVE #-39[.IY], #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena18
WRINT #-5[.IY]
SUB #-7[.IY], #-8[.IY]
MOVE .A, #-40[.IY]
; Traducir Quadruple - [ASIG A, _T_29, null]
MOVE #-40[.IY], #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena19
WRINT #-5[.IY]
; Traducir Quadruple - [DIR_MEM _T_30, A, null]
SUB .IY , #5
MOVE .A ,  #-41[.IY]
; Traducir Quadruple - [ASIG P, _T_30, null]
MOVE #-41[.IY], #-7[.IY]
; Traducir Quadruple - [DIR_MEM _T_31, A, null]
SUB .IY , #5
MOVE .A ,  #-42[.IY]
SUB #-7[.IY], #-42[.IY]
MOVE .A, #-43[.IY]
; Traducir Quadruple - [ASIG A, _T_32, null]
MOVE #-43[.IY], #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena20
WRINT #-5[.IY]
HALT 

; Inicio Cadenas de Texto

cadena0:  DATA "\n"
cadena1:  DATA "IMPRIME EL CONTENIDO DE LA VARIABLE APUNTADA POR P (3): "
cadena2:  DATA "IMPRIME EL CONTENIDO DE LA VARIABLE APUNTADA POR RESITRO.PUNTERO (3): "
cadena3:  DATA "IMPRIME LA DIRECCION DE MEMORIA DE A(-6): "
cadena4:  DATA "IMPRIME LA DIRECCION DE MEMORIA DE A(-6): "
cadena5:  DATA "IMPRIME EL VALOR ACTUAL DE A (2): "
cadena6:  DATA "IMPRIME LA DIRECCION DE MEMORIA DE A (-6): "
cadena7:  DATA "IMPRIME LA DIRECCION DE MEMORIA DE A MENOS 1 (-7): "
cadena8:  DATA "IMPRIME EL CONTENIDO DE LA DIRECCON DE P (2): "
cadena9:  DATA "IMPRIME EL CONTENIDO DE LA DIRECCON DE P (2): "
cadena10:  DATA "IMPRIME EL VALOR ACTUAL DE A (8): "
cadena11:  DATA "IMPRIME EL VALOR ACTUAL DE A (98): "
cadena12:  DATA "IMPRIME EL CONTENIDO DE LA DIRECCION APUNTADA POR P (6): "
cadena13:  DATA "IMPRIME EL CONTENIDO DE LA DIRECCION APUNTADA POR R.PUNTERO (8): "
cadena14:  DATA "IMPRIME EL VALOR ACTUAL DE A (0): "
cadena15:  DATA "IMPRIME EL VALOR ACTUAL DE R.ENTERO (0): "
cadena16:  DATA "IMPRIME EL VALOR ACTUAL DE R.ENTERO (-10): "
cadena17:  DATA "IMPRIME EL VALOR ACTUAL DE A (0): "
cadena18:  DATA "IMPRIME EL VALOR ACTUAL DE A (-14): "
cadena19:  DATA "IMPRIME EL VALOR ACTUAL DE A (0): "
cadena20:  DATA "IMPRIME EL VALOR ACTUAL DE A (0): "
