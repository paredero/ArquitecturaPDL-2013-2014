; INICIO PROGRAMA PRINCIPAL pasQal 
RES 11
MOVE #65535, .SP
MOVE .SP , .IY
SUB  .SP , #48
MOVE .A , .SP
MOVE .IY , /0
NOP
WRSTR /cadena1
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [INICIAR_SET CONJ1, 10, null]
MOVE #0 , #-5[.IY]
MOVE #0 , #-6[.IY]
MOVE #0 , #-7[.IY]
MOVE #0 , #-8[.IY]
MOVE #0 , #-9[.IY]
MOVE #0 , #-10[.IY]
MOVE #0 , #-11[.IY]
MOVE #0 , #-12[.IY]
MOVE #0 , #-13[.IY]
MOVE #0 , #-14[.IY]

; Traducir Quadruple - [CARGAR_SET CONJ1, 2, 4]
MOVE #1 , #-6[.IY]
MOVE #1 , #-7[.IY]
MOVE #1 , #-8[.IY]

; Traducir Quadruple - [INICIAR_SET CONJ2, 10, null]
MOVE #0 , #-15[.IY]
MOVE #0 , #-16[.IY]
MOVE #0 , #-17[.IY]
MOVE #0 , #-18[.IY]
MOVE #0 , #-19[.IY]
MOVE #0 , #-20[.IY]
MOVE #0 , #-21[.IY]
MOVE #0 , #-22[.IY]
MOVE #0 , #-23[.IY]
MOVE #0 , #-24[.IY]

; Traducir Quadruple - [CARGAR_SET CONJ2, 3, 7]
MOVE #1 , #-17[.IY]
MOVE #1 , #-18[.IY]
MOVE #1 , #-19[.IY]
MOVE #1 , #-20[.IY]
MOVE #1 , #-21[.IY]

; Traducir Quadruple - [UNION_SET _T_0, CONJ1, CONJ2]
OR #-5[.IY] , #-15[.IY]
MOVE .A , #-35[.IY]
OR #-6[.IY] , #-16[.IY]
MOVE .A , #-36[.IY]
OR #-7[.IY] , #-17[.IY]
MOVE .A , #-37[.IY]
OR #-8[.IY] , #-18[.IY]
MOVE .A , #-38[.IY]
OR #-9[.IY] , #-19[.IY]
MOVE .A , #-39[.IY]
OR #-10[.IY] , #-20[.IY]
MOVE .A , #-40[.IY]
OR #-11[.IY] , #-21[.IY]
MOVE .A , #-41[.IY]
OR #-12[.IY] , #-22[.IY]
MOVE .A , #-42[.IY]
OR #-13[.IY] , #-23[.IY]
MOVE .A , #-43[.IY]
OR #-14[.IY] , #-24[.IY]
MOVE .A , #-44[.IY]

; Traducir Quadruple - [ASIG_SET CONJ3, _T_0, null]
MOVE #-35[.IY] , #-25[.IY]
MOVE #-36[.IY] , #-26[.IY]
MOVE #-37[.IY] , #-27[.IY]
MOVE #-38[.IY] , #-28[.IY]
MOVE #-39[.IY] , #-29[.IY]
MOVE #-40[.IY] , #-30[.IY]
MOVE #-41[.IY] , #-31[.IY]
MOVE #-42[.IY] , #-32[.IY]
MOVE #-43[.IY] , #-33[.IY]
MOVE #-44[.IY] , #-34[.IY]

WRSTR /cadena2
; Traducir Quadruple - [CMP 2, 1, null]
CMP #2, #1
; Salto si negativo __L0
BN /L0
; Traducir Quadruple - [CMP 10, 2, null]
CMP #10, #2
; Salto si negativo __L0
BN /L0
; Traducir Quadruple - [IN_SET _T_1, CONJ3, 2]
ADD #2 ,#24
SUB .IY , .A 
MOVE [.A] , #-45[.IY]
BR /L1
; Etiqueta de salto __L0
L0 :
; Traducir Quadruple - [ASIG _T_1, 0, null]
MOVE #0, #-45[.IY]
; Etiqueta de salto __L1
L1 :
; Traducir Quadruple - [CMP 6, 1, null]
CMP #6, #1
; Salto si negativo __L2
BN /L2
; Traducir Quadruple - [CMP 10, 6, null]
CMP #10, #6
; Salto si negativo __L2
BN /L2
; Traducir Quadruple - [IN_SET _T_2, CONJ3, 6]
ADD #6 ,#24
SUB .IY , .A 
MOVE [.A] , #-46[.IY]
BR /L3
; Etiqueta de salto __L2
L2 :
; Traducir Quadruple - [ASIG _T_2, 0, null]
MOVE #0, #-46[.IY]
; Etiqueta de salto __L3
L3 :
; Traducir Quadruple - [CMP 1, _T_1, null]
CMP #1, #-45[.IY]
; Salto si cero a etiqueta __L4
BZ /L4
; Traducir Quadruple - [ASIG _T_3, 0, null]
MOVE #0, #-47[.IY]
BR /L6
; Etiqueta de salto __L4
L4 :
; Traducir Quadruple - [CMP 1, _T_2, null]
CMP #1, #-46[.IY]
; Salto si cero a etiqueta __L5
BZ /L5
; Traducir Quadruple - [ASIG _T_3, 0, null]
MOVE #0, #-47[.IY]
BR /L6
; Etiqueta de salto __L5
L5 :
; Traducir Quadruple - [ASIG _T_3, 1, null]
MOVE #1, #-47[.IY]
; Etiqueta de salto __L6
L6 :
; Traducir Quadruple - [CMP _T_3, 1, null]
CMP #-47[.IY], #1
; Salto si no cero a etiqueta __L8
BNZ /L8
WRSTR /cadena3
BR /L7
; Etiqueta de salto __L8
L8 :
WRSTR /cadena4
; Etiqueta de salto __L7
L7 :
NOP
HALT 

; Inicio Cadenas de Texto

cadena0:  DATA "\n"
cadena1:  DATA "CONJUNTOS OPERACIONES"
cadena2:  DATA "IN(TRUE):"
cadena3:  DATA "TRUE"
cadena4:  DATA "FALSE"
