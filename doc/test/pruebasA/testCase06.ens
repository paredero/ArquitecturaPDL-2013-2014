; INICIO PROGRAMA PRINCIPAL pasQal 
RES 11
MOVE #65535, .SP
MOVE .SP , .IY
SUB  .SP , #12
MOVE .A , .SP
MOVE .IY , /0
NOP
WRSTR /cadena1
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [ASIG A, 1, null]
MOVE #1, #-5[.IY]
WRSTR /cadena2
; Traducir Quadruple - [CMP A, 0, null]
CMP #-5[.IY], #0
; Salto si no cero a etiqueta __L0
BNZ /L0
; Traducir Quadruple - [ASIG _T_0, 0, null]
MOVE #0, #-9[.IY]
BR /L1
; Etiqueta de salto __L0
L0 :
; Traducir Quadruple - [ASIG _T_0, 1, null]
MOVE #1, #-9[.IY]
; Etiqueta de salto __L1
L1 :
; Traducir Quadruple - [CMP _T_0, 1, null]
CMP #-9[.IY], #1
; Salto si no cero a etiqueta __L3
BNZ /L3
WRSTR /cadena3
BR /L2
; Etiqueta de salto __L3
L3 :
WRSTR /cadena4
; Etiqueta de salto __L2
L2 :
NOP
; Traducir Quadruple - [ASIG X, 2, null]
MOVE #2, #-7[.IY]
; Traducir Quadruple - [ASIG Y, 4, null]
MOVE #4, #-8[.IY]
; Traducir Quadruple - [CMP X, Y, null]
CMP #-7[.IY], #-8[.IY]
; Salto si negativo __L4
BN /L4
; Traducir Quadruple - [ASIG _T_1, 0, null]
MOVE #0, #-10[.IY]
BR /L5
; Etiqueta de salto __L4
L4 :
; Traducir Quadruple - [ASIG _T_1, 1, null]
MOVE #1, #-10[.IY]
; Etiqueta de salto __L5
L5 :
; Traducir Quadruple - [ASIG B, _T_1, null]
MOVE #-10[.IY], #-6[.IY]
WRSTR /cadena5
; Traducir Quadruple - [CMP B, 0, null]
CMP #-6[.IY], #0
; Salto si no cero a etiqueta __L6
BNZ /L6
; Traducir Quadruple - [ASIG _T_2, 0, null]
MOVE #0, #-11[.IY]
BR /L7
; Etiqueta de salto __L6
L6 :
; Traducir Quadruple - [ASIG _T_2, 1, null]
MOVE #1, #-11[.IY]
; Etiqueta de salto __L7
L7 :
; Traducir Quadruple - [CMP _T_2, 1, null]
CMP #-11[.IY], #1
; Salto si no cero a etiqueta __L9
BNZ /L9
WRSTR /cadena6
BR /L8
; Etiqueta de salto __L9
L9 :
WRSTR /cadena7
; Etiqueta de salto __L8
L8 :
NOP
HALT 

; Inicio Cadenas de Texto

cadena0:  DATA "\n"
cadena1:  DATA "IF ELSE OPERADORES RELACIONALES"
cadena2:  DATA "A(TRUE):"
cadena3:  DATA "TRUE"
cadena4:  DATA "FALSE"
cadena5:  DATA " B(TRUE):"
cadena6:  DATA "TRUE"
cadena7:  DATA "FALSE"
