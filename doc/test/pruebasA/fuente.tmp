; INICIO PROGRAMA PRINCIPAL pasQual 
RES 21
MOVE #65535, .SP
MOVE .SP , .IY
SUB  .SP , #6
MOVE .A , .SP
MOVE .IY , /0
;-- Definicion FUNCION/PROCEDIMIENTO 
BR /FIN_L0
L0 :

NOP
ADD #-5[.IY], #1
MOVE .A, #-7[.IY]
; Traducir Quadruple - [ASIG Y, _T_0, null]
MOVE #-7[.IY], #-6[.IY]
; Traducir Quadruple - [CMP X, 5, null]
CMP #-5[.IY], #5
; Salto si negativo __L2
BN /L2
; Traducir Quadruple - [ASIG _T_1, 0, null]
MOVE #0, #-8[.IY]
BR /L3
; Etiqueta de salto __L2
L2 :
; Traducir Quadruple - [ASIG _T_1, 1, null]
MOVE #1, #-8[.IY]
; Etiqueta de salto __L3
L3 :
; Traducir Quadruple - [CMP _T_1, 1, null]
CMP #-8[.IY], #1
; Salto si no cero a etiqueta __L5
BNZ /L5
; INICIO ARGUMENTOS FIN
; Cargado argumento REFERENCIA Quadruple - [ARGUMENTO_REF Y, 5, null]
; Llamada Funcion Quadruple - [CALL INCREMENTA, 0, 0]
MOVE .SP , .IX
MOVE #-6[.IY] , #-5[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #9
MOVE .A , .SP
MOVE #RET_L4 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L4 , #-4[.IY]
BR /L0
REF_L4:
MOVE #-5[.IY] , #-6[.IX]
BR /REF_L0
RET_L4: 
NOP 

; Etiqueta de salto __L5
L5 :
NOP
WRINT #-6[.IY]
L1 : 
; Retorno Argumentos REFERENCIA 
MOVE #-4[.IY] , .R5 
MOVE .R5 , .PC 
REF_L0: 
; Retorno Subprograma 
MOVE #0[.IY] , .R9
MOVE #-1[.IY] , .R7
MOVE #-2[.IY] , /0
MOVE .IY , .SP
MOVE .IX , .IY
MOVE #-3[.IY], .IX
MOVE .R7 , .PC
FIN_L0 : 

WRSTR /cadena1
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [ASIG CERO, 0, null]
MOVE #0, #-5[.IY]
WRSTR /cadena2
; INICIO ARGUMENTOS FIN
; Cargado argumento REFERENCIA Quadruple - [ARGUMENTO_REF CERO, 5, null]
; Llamada Funcion Quadruple - [CALL INCREMENTA, 0, 0]
MOVE .SP , .IX
MOVE #-5[.IY] , #-5[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #9
MOVE .A , .SP
MOVE #RET_L6 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L6 , #-4[.IY]
BR /L0
REF_L6:
MOVE #-5[.IY] , #-5[.IX]
BR /REF_L0
RET_L6: 
NOP 

HALT 

; Inicio Cadenas de Texto

cadena0:  DATA "\n"
cadena1:  DATA "RECURSIVIDAD"
cadena2:  DATA "X(654321):"

