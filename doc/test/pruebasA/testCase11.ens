; INICIO PROGRAMA PRINCIPAL pasQal 
RES 21
MOVE #65535, .SP
MOVE .SP , .IY
SUB  .SP , #7
MOVE .A , .SP
MOVE .IY , /0
;-- Definicion FUNCION/PROCEDIMIENTO 
BR /FIN_L0
L0 :

NOP
; Traducir Quadruple - [ASIG U, 1, null]
MOVE #1, #-7[.IY]
ADD #-5[.IY], #1
MOVE .A, #-8[.IY]
; Traducir Quadruple - [ASIG X, _T_0, null]
MOVE #-8[.IY], #-5[.IY]
ADD #-6[.IY], #7
MOVE .A, #-9[.IY]
; Traducir Quadruple - [ASIG Y, _T_1, null]
MOVE #-9[.IY], #-6[.IY]
L1 : 
; Retorno Argumentos REFERENCIA 
MOVE #-4[.IY] , .R5 
MOVE .R5 , .PC 
REF_L0: 
; Retorno Subprograma 
MOVE #0[.IY] , .R9
MOVE #-1[.IY] , .R7
MOVE #-2[.IY] , /0
MOVE .IY , .SP
MOVE .IX , .IY
MOVE #-3[.IY], .IX
MOVE .R7 , .PC
FIN_L0 : 

WRSTR /cadena1
; Escribimos un salto de linea
WRSTR /cadena0
; Traducir Quadruple - [ASIG W, 0, null]
MOVE #0, #-6[.IY]
; Traducir Quadruple - [ASIG Z, 1, null]
MOVE #1, #-5[.IY]
; INICIO ARGUMENTOS FIN
; Cargado argumento REFERENCIA Quadruple - [ARGUMENTO_REF Z, 5, null]
; Cargado argumento REFERENCIA Quadruple - [ARGUMENTO_REF W, 6, null]
; Cargado argumento Quadruple - [ARGUMENTO 0, 7, null]
; Llamada Funcion Quadruple - [CALL INCREMENTA, 0, 0]
MOVE .SP , .IX
MOVE #-5[.IY] , #-5[.IX]
MOVE #-6[.IY] , #-6[.IX]
MOVE #0 , #-7[.IX]
MOVE /0 , #-2[.IY]
MOVE .IY , /0
MOVE .IY , .IX
MOVE .SP , .IY
SUB .SP , #10
MOVE .A , .SP
MOVE #RET_L2 , #-1[.IY]
MOVE .IX , #-3[.IY]
MOVE #REF_L2 , #-4[.IY]
BR /L0
REF_L2:
MOVE #-5[.IY] , #-5[.IX]
MOVE #-6[.IY] , #-6[.IX]
BR /REF_L0
RET_L2: 
NOP 

WRSTR /cadena2
WRINT #-5[.IY]
; Escribimos un salto de linea
WRSTR /cadena0
WRSTR /cadena3
WRINT #-6[.IY]
HALT 

; Inicio Cadenas de Texto

cadena0:  DATA "\n"
cadena1:  DATA "SUBPROGRAMAS PROCEDIMIENTOS"
cadena2:  DATA "Z(2):"
cadena3:  DATA "W(7):"
